name: RDP Gaming Server Windows Server 2025 (RTX 4080, 32GB RAM, 1TB SSD)

on:
  workflow_dispatch:

jobs:
  rdp-gaming:
    runs-on: windows-2022
    timeout-minutes: 1080  # 18 ore

    env:
      USERNAME: runneradmin
      PASSWORD_LENGTH: 16
      TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}

    steps:
      - name: Declare VM hardware spec (simulat)
        shell: pwsh
        run: |
          Write-Host "=== Configurare VM Windows Server 2025 cu 32GB RAM, 1TB SSD, GPU RTX 4080 virtualizat ==="

      - name: Activează Remote Desktop
        shell: pwsh
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          netsh advfirewall firewall add rule name="RDP-Allow" dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force

      - name: Resetare și exportare parolă reală pentru user $env:USERNAME
        shell: pwsh
        run: |
          Add-Type -AssemblyName System.Security
          function GenPass { -join ((33..126) | Get-Random -Count $env:PASSWORD_LENGTH | % {[char]$_}) }
          $user = $env:USERNAME

          $existingUser = Get-LocalUser -Name $user -ErrorAction SilentlyContinue

          if (-not $existingUser) {
            Write-Host "User '$user' nu există pe sistem. Nu vom modifica nimic."
            exit 0
          }

          $newPass = GenPass
          $secure = ConvertTo-SecureString $newPass -AsPlainText -Force

          try {
            Set-LocalUser -Name $user -Password $secure -ErrorAction Stop
            Write-Host "Parola pentru '$user' a fost resetată cu succes."
            Write-Output "RUNNERADMIN_USER=$user" >> $env:GITHUB_ENV
            Write-Output "RUNNERADMIN_PASS=$newPass" >> $env:GITHUB_ENV
          } catch {
            Write-Host "Eroare la resetarea parolei pentru '$user': $_"
            exit 1
          }

      - name: Instalează și configurează Tailscale VPN
        shell: pwsh
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=$env:TAILSCALE_AUTH_KEY --hostname=gh-server-$env:GITHUB_RUN_ID

      - name: Afișează date de acces (user, parolă, IP Tailscale)
        shell: pwsh
        run: |
          $runnerUser = $env:RUNNERADMIN_USER
          $runnerPass = $env:RUNNERADMIN_PASS

          $tsIp = ""
          if (Test-Path "$env:ProgramFiles\Tailscale\tailscale.exe") {
            try { $tsIp = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4; $tsIp = $tsIp.Trim() } catch {}
          }

          Write-Host "=== INFORMAȚII ACCES RDP ==="
          if ($runnerUser) {
            Write-Host "User: $runnerUser"
            Write-Host "Parolă: $runnerPass"
          } else {
            Write-Host "User: NU a fost exportat."
          }
          Write-Host "IP Tailscale: $tsIp"
          Write-Host "Hardware declarat: Windows Server 2025, 32GB RAM, 1TB SSD, RTX 4080 virtualizat"
          Write-Host "=========================="

      - name: Menține conexiunea (ping la 10 minute) - loop fix 18 ore
        shell: pwsh
        run: |
          for ($i = 0; $i -lt 108; $i++) {
            Write-Host ("Mențin conexiunea... Iterația {0} / 108 - {1}" -f $i, (Get-Date))
            Start-Sleep -Seconds 600
          }
          
